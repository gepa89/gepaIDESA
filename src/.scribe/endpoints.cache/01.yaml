## Autogenerated by Scribe. DO NOT MODIFY.

name: Authors
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/authors
    metadata:
      groupName: Authors
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a paginated, filtered, and sorted list of authors.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Authorization: 'string required The authorization token. Example: Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept-Version: 'string required The version of the API to use. Example: v1'
    urlParameters:
      per_page:
        name: per_page
        description: 'Optional. Number of authors per page. Defaults to 10.'
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      name:
        name: name
        description: 'Optional. Filter by author name.'
        required: false
        example: John
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'Optional. Filter by author email.'
        required: false
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      order_by:
        name: order_by
        description: 'Optional. Field to sort by. Defaults to "id".'
        required: false
        example: name
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      order_dir:
        name: order_dir
        description: 'Optional. Sorting direction (asc or desc). Defaults to "asc".'
        required: false
        example: desc
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      per_page: 20
      name: John
      email: john@example.com
      order_by: name
      order_dir: desc
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
                {
                    "id": 1,
                    "name": "Author Name",
                    "email": "author@example.com",
                    "birthdate": "1980-01-01",
                    "nationality": "American"
                }
            ],
            "links": {
                "first": "http://example.com/api/v1/authors?page=1",
                "last": "http://example.com/api/v1/authors?page=10",
                "prev": null,
                "next": "http://example.com/api/v1/authors?page=2"
            },
            "meta": {
                "current_page": 1,
                "last_page": 10,
                "per_page": 10,
                "total": 100
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "Invalid pagination or sorting parameters."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "message": "An error occurred while fetching authors."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/authors
    metadata:
      groupName: Authors
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new author.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Authorization: 'string required The authorization token. Example: Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept-Version: 'string required The version of the API to use. Example: v1'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the author.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      birthdate:
        name: birthdate
        description: 'The birthdate of the author.'
        required: true
        example: '1980-01-01'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      nationality:
        name: nationality
        description: 'The nationality of the author.'
        required: true
        example: American
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      birthdate: '1980-01-01'
      nationality: American
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "name": "John Doe",
            "birthdate": "1980-01-01",
            "nationality": "American"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Validation failed.",
            "errors": {
                "name": ["The name field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "message": "An error occurred while creating the author."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/authors/{id}'
    metadata:
      groupName: Authors
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get details of a specific author.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Authorization: 'string required The authorization token. Example: Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept-Version: 'string required The version of the API to use. Example: v1'
    urlParameters:
      id:
        name: id
        description: 'Author ID.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "Author Name",
            "birthdate": "1980-01-01",
            "nationality": "American"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "Invalid ID. The ID must be a numeric value."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Author not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "message": "An error occurred while fetching the author."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/authors/{id}'
    metadata:
      groupName: Authors
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing author.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Authorization: 'string required The authorization token. Example: Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept-Version: 'string required The version of the API to use. Example: v1'
    urlParameters:
      id:
        name: id
        description: 'Author ID.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Optional The updated name of the author.'
        required: false
        example: 'Jane Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      birthdate:
        name: birthdate
        description: 'Optional The updated birthdate of the author.'
        required: false
        example: '1990-01-01'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      nationality:
        name: nationality
        description: 'Optional The updated nationality of the author.'
        required: false
        example: British
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Jane Doe'
      birthdate: '1990-01-01'
      nationality: British
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "Jane Doe",
            "birthdate": "1990-01-01",
            "nationality": "British"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Author not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Validation failed.",
            "errors": {
                "name": ["The name field is required."]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "message": "An error occurred while updating the author."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/authors/{id}'
    metadata:
      groupName: Authors
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete an author.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Authorization: 'string required The authorization token. Example: Bearer {YOUR_AUTH_TOKEN}'
      Content-Type: application/json
      Accept-Version: 'string required The version of the API to use. Example: v1'
    urlParameters:
      id:
        name: id
        description: 'Author ID.'
        required: true
        example: 11
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 11
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Author deleted successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Author not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "message": "An error occurred while deleting the author."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
